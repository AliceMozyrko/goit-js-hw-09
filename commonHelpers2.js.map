{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Оголоси поза будь - якими функціями об’єкт formData з полями email та message,\n// які спочатку мають порожні рядки як значення: { email: \"\", message: \"\" }.\n\n// Використовуй метод делегування для відстеження змін у формі через подію\n// input.Зберігай актуальні дані з полів email та message у formData та \n// записуй цей об’єкт у локальне сховище.Використовуй ключ\n// \"feedback-form-state\" для зберігання даних у сховищі.\n// При завантаженні сторінки перевір, чи є дані у локальному сховищі. \n// Якщо так, використовуй їх для заповнення форми та об'єкта formData. \n// Якщо ні, залиш поля форми порожніми.\n// Перед відправленням форми переконайся, що обидва поля форми заповнені. \n// Якщо будь - яке з полів(властивостей об’єкта formData) порожнє,\n// показуй сповіщення з текстом «Fill please all fields». \n// Якщо всі поля заповнені, виведи у консоль об’єкт formData з \n// актуальними значеннями, очисти локальне сховище, об’єкт formData і \n// поля форми.\n\nconst formData = {\n  email: \"\",\n  message: \"\"\n};\n\nconst FEEDBACK_KEY = \"feedback-form-state\";\n\nconst form = document.querySelector(\".feedback-form\");\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const trimEmail = formData.email.trim();\n  const trimMsg = formData.message.trim();\n  if (trimEmail === \"\" || trimMsg === \"\") {\n    alert(\"Fill please all fields\");\n    return;\n  }\n  console.log({ email: trimEmail, message: trimMsg });\n  localStorage.removeItem(FEEDBACK_KEY);\n  form.reset();\n}\n\nfunction onFormInput(event) {\n  formData[event.target.name] = event.target.value.trim();\n  localStorage.setItem(FEEDBACK_KEY, JSON.stringify(formData));\n}\n\nform.addEventListener(\"submit\", onFormSubmit);\nform.addEventListener(\"input\", onFormInput);\n\nwindow.addEventListener(\"load\", () => {\n  const savedFormData = JSON.parse(localStorage.getItem(FEEDBACK_KEY)) || {};\n  const emailInput = form.querySelector('input[type=\"email\"]');\n  const messageInput = form.querySelector(\"textarea\");\n  emailInput.value = savedFormData.email || \"\";\n  messageInput.value = savedFormData.message || \"\";\n});\n"],"names":["formData","FEEDBACK_KEY","form","onFormSubmit","event","trimEmail","trimMsg","onFormInput","savedFormData","emailInput","messageInput"],"mappings":"oDAiBA,MAAMA,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAEMC,EAAe,sBAEfC,EAAO,SAAS,cAAc,gBAAgB,EAEpD,SAASC,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EACpB,MAAMC,EAAYL,EAAS,MAAM,KAAI,EAC/BM,EAAUN,EAAS,QAAQ,KAAI,EACrC,GAAIK,IAAc,IAAMC,IAAY,GAAI,CACtC,MAAM,wBAAwB,EAC9B,MACD,CACD,QAAQ,IAAI,CAAE,MAAOD,EAAW,QAASC,CAAO,CAAE,EAClD,aAAa,WAAWL,CAAY,EACpCC,EAAK,MAAK,CACZ,CAEA,SAASK,EAAYH,EAAO,CAC1BJ,EAASI,EAAM,OAAO,IAAI,EAAIA,EAAM,OAAO,MAAM,OACjD,aAAa,QAAQH,EAAc,KAAK,UAAUD,CAAQ,CAAC,CAC7D,CAEAE,EAAK,iBAAiB,SAAUC,CAAY,EAC5CD,EAAK,iBAAiB,QAASK,CAAW,EAE1C,OAAO,iBAAiB,OAAQ,IAAM,CACpC,MAAMC,EAAgB,KAAK,MAAM,aAAa,QAAQP,CAAY,CAAC,GAAK,GAClEQ,EAAaP,EAAK,cAAc,qBAAqB,EACrDQ,EAAeR,EAAK,cAAc,UAAU,EAClDO,EAAW,MAAQD,EAAc,OAAS,GAC1CE,EAAa,MAAQF,EAAc,SAAW,EAChD,CAAC"}