{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Оголоси поза будь - якими функціями об’єкт formData з полями email та message,\n// які спочатку мають порожні рядки як значення: { email: \"\", message: \"\" }.\n\n// Використовуй метод делегування для відстеження змін у формі через подію\n// input.Зберігай актуальні дані з полів email та message у formData та \n// записуй цей об’єкт у локальне сховище.Використовуй ключ\n// \"feedback-form-state\" для зберігання даних у сховищі.\n// При завантаженні сторінки перевір, чи є дані у локальному сховищі. \n// Якщо так, використовуй їх для заповнення форми та об'єкта formData. \n// Якщо ні, залиш поля форми порожніми.\n// Перед відправленням форми переконайся, що обидва поля форми заповнені. \n// Якщо будь - яке з полів(властивостей об’єкта formData) порожнє,\n// показуй сповіщення з текстом «Fill please all fields». \n// Якщо всі поля заповнені, виведи у консоль об’єкт formData з \n// актуальними значеннями, очисти локальне сховище, об’єкт formData і \n// поля форми.\n\nconst formData = {\n  email: \"\",\n  message: \"\"\n}\n\nconst FEEDBACK_KEY = \"feedback-form-state\"\n\nconst formRefs = {\n  form: document.querySelector(\".feedback-form\"),\n  input: document.querySelector('input[type=\"email\"]'),\n  message: document.querySelector(\"textarea\")\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault()\n  if (formData.email.trim() === \"\" || formData.message.trim() === \"\") {\n    alert(\"Fill please all fields\");\n    return;\n  }\n  console.log(formData);\n  localStorage.removeItem(FEEDBACK_KEY)\n  event.currentTarget.reset()\n}\n\nfunction onFormInput(event) {\n  event.preventDefault()\n  formData[event.target.name] = event.target.value\n  localStorage.setItem(FEEDBACK_KEY, JSON.stringify(formData));\n}\n\nformRefs.form.addEventListener(\"submit\", onFormSubmit)\nformRefs.form.addEventListener(\"input\", onFormInput)\n\n\nfunction onTextarea(event) {\n  localStorage.setItem(FEEDBACK_KEY, event.target.value)\n}\nformRefs.message.addEventListener(\"input\", onTextarea)\n\nfunction populateTxtarea() {\n  const msgText = localStorage.getItem(FEEDBACK_KEY)\n  if (!msgText) return\n  formRefs.message.value = msgText\n}"],"names":["formData","FEEDBACK_KEY","formRefs","onFormSubmit","event","onFormInput","onTextarea"],"mappings":"oDAiBA,MAAMA,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAEMC,EAAe,sBAEfC,EAAW,CACf,KAAM,SAAS,cAAc,gBAAgB,EAC7C,MAAO,SAAS,cAAc,qBAAqB,EACnD,QAAS,SAAS,cAAc,UAAU,CAC5C,EAEA,SAASC,EAAaC,EAAO,CAE3B,GADAA,EAAM,eAAgB,EAClBJ,EAAS,MAAM,SAAW,IAAMA,EAAS,QAAQ,KAAM,IAAK,GAAI,CAClE,MAAM,wBAAwB,EAC9B,MACD,CACD,QAAQ,IAAIA,CAAQ,EACpB,aAAa,WAAWC,CAAY,EACpCG,EAAM,cAAc,MAAO,CAC7B,CAEA,SAASC,EAAYD,EAAO,CAC1BA,EAAM,eAAgB,EACtBJ,EAASI,EAAM,OAAO,IAAI,EAAIA,EAAM,OAAO,MAC3C,aAAa,QAAQH,EAAc,KAAK,UAAUD,CAAQ,CAAC,CAC7D,CAEAE,EAAS,KAAK,iBAAiB,SAAUC,CAAY,EACrDD,EAAS,KAAK,iBAAiB,QAASG,CAAW,EAGnD,SAASC,EAAWF,EAAO,CACzB,aAAa,QAAQH,EAAcG,EAAM,OAAO,KAAK,CACvD,CACAF,EAAS,QAAQ,iBAAiB,QAASI,CAAU"}